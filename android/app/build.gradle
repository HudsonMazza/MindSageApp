plugins {
    id "com.android.application"
    id 'com.google.gms.google-services' // FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1').toInteger()
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

android {
    namespace "com.example.mind_sage"
    compileSdkVersion 34 // Replace flutter.compileSdkVersion with an explicit SDK version
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.mind_sage"
        minSdkVersion 21
        targetSdkVersion 33 // Replace flutter.targetSdkVersion with an explicit SDK version
        versionCode flutterVersionCode
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Consider replacing this with a release signing config for production
            minifyEnabled false // Disables code shrinking for debug builds; set to true for release builds with ProGuard rules
            shrinkResources false
        }
    }

    lintOptions {
        disable 'InvalidPackage' // Disable certain lint checks if necessary
    }
}

flutter {
    source '../..'
}

dependencies {
    // Add any additional dependencies your project might need
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
}
